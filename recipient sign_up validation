//import 'dart:html';
import 'package:async/async.dart';
import 'package:flutter/material.dart';
//import 'package:file_picker/file_picker.dart';
import 'package:flutter/rendering.dart';
//import 'package:intl_phone_number_input/intl_phone_number_input.dart';
void main()
{
  runApp(recipient());
}
class recipient extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home:home(),
      //theme: ThemeData.dark(),
    );
  }
}
class home extends StatefulWidget {

  @override
  _homeState createState() => _homeState();
}
class _homeState extends State<home> {
 DateTime _dateTime;
 String firstname,lastname,addressline1,addressline2,city,state,country;
 String dropdownvalue='Select Gender';
 bool checkstate= false;
 final recipientsignuppersonaldetails = GlobalKey<FormState>();
 final recipientsignupaddress=GlobalKey<FormState>();
 validateform()
 {
   print("Validating Form...");
   if (recipientsignuppersonaldetails.currentState.validate()&&recipientsignupaddress.currentState.validate()&&(checkstate==true)&&(dropdownvalue !='Select Gender')) {
     print("Validation Successful");
     recipientsignuppersonaldetails.currentState.save();
     recipientsignupaddress.currentState.save();
     print('Name $firstname');
     print('Name $lastname');
     print("Address $addressline1");
     print("Address $addressline2");
     print("City $city");
     print("state $state");
     print("country $country");
     Navigator.push(context, MaterialPageRoute(builder: (context) => recipienthomepage()),);
   }
   else
     {
     print("Validation Error");
     }
 }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Recipient Form'),
      ),
      body: SingleChildScrollView(
        child: Column(
          children: <Widget>[
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: Text('Please Enter Your Details',style: TextStyle(fontSize: 18.1,fontStyle: FontStyle.italic),),
            ),
            SafeArea(
              child: Padding(
                padding: const EdgeInsets.all(8.0),
                child: Form(
                  key: recipientsignuppersonaldetails,
                  child: Container(
                    //height: 310,
                    //width:600,
                    decoration: BoxDecoration(
                      shape: BoxShape.rectangle,
                      borderRadius: BorderRadius.circular(12),
                      border: Border.all(color: Colors.black87,)
                    ),
                    child: Column(
                      children: <Widget>[
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Text('Personal Details'),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: TextFormField(
                            //cursorWidth: 4.0,
                            style: TextStyle(
                                fontSize: 17,height: 1.1
                            ),
                            cursorColor: Colors.black,
                            decoration: InputDecoration(labelText:'First Name',
                                contentPadding: EdgeInsets.all(10),
                                border: OutlineInputBorder(borderRadius: BorderRadius.circular(20))),
                                onSaved: (input)=>firstname=input,
                                validator: (input) => input.length == 0 ? "Enter Name" : null,
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: TextFormField(

                            style: TextStyle(
                                fontSize: 17,height: 1.1
                            ),
                            cursorColor: Colors.black,
                            decoration: InputDecoration(labelText:'Last Name',
                                contentPadding: EdgeInsets.all(10),
                                border: OutlineInputBorder(borderRadius: BorderRadius.circular(20))),
                            onSaved: (input)=>lastname=input,
                            validator: (input) => input.length == 0 ? "Enter Name" : null,
                          ),
                        ),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: TextFormField(
                            style: TextStyle(
                                fontSize: 17,height: 1.1
                            ),
                            cursorColor: Colors.black,
                            decoration: InputDecoration(
                                labelText:'Date Of Birth',
                                contentPadding: EdgeInsets.all(10),
                              border: OutlineInputBorder(borderRadius: BorderRadius.circular((20))),
                              suffixIcon: IconButton(
                                icon: Icon(
                                  Icons.calendar_today,
                                  size: 25,
                                ),
                                onPressed: (){
                                  showDatePicker(context: (context),  firstDate: DateTime(1950), lastDate: DateTime.now(), initialDate: DateTime.now()).then((date) { setState((){_dateTime=date;});});
                                },
                              )
                            ),
                          ),
                        ),
                        Text(_dateTime.toString()),
                        Padding(
                          padding: const EdgeInsets.all(8.0),
                          child: Container(
//
                            child: DropdownButtonFormField(
                              value: dropdownvalue,
                              onChanged: (String newvalue){setState(() {
                                 dropdownvalue=newvalue;
                                 print(dropdownvalue);
                              });},

                              items: <String>['Select Gender', 'Male', 'Female', 'Others']
                                  .map<DropdownMenuItem<String>>((String value) {
                                return DropdownMenuItem<String>(
                                  value: value,
                                  child: Text(value),
                                );
                              }).toList(),
                            ),
                          ),
                        ),

                      ],
                    ),
                  ),
                ),
              ),
            ),
            Form(
              key: recipientsignupaddress,
              child: Container(
                //height: 360,
                //width: 400,
                decoration: BoxDecoration(
                    shape: BoxShape.rectangle,
                    borderRadius: BorderRadius.circular(12),
                    border: Border.all(color: Colors.black87,)
                ),
                child: Column(
                  children: <Widget>[
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: Text("Address",textAlign: TextAlign.center,),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: TextFormField(
                        decoration: InputDecoration(
                          labelText: 'Address Line1',
                            contentPadding: EdgeInsets.all(10),
                            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                        ),
                        onSaved: (input)=>addressline1=input,
                        validator: (input) => input.length == 0 ? "Enter Correct Address" : null,
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: TextFormField(
                        decoration:InputDecoration(
                          labelText: 'Address Line2',
                            contentPadding: EdgeInsets.all(10),
                            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                        ),
                        onSaved: (input)=>addressline2=input,
                        validator: (input) => input.length == 0 ? "Enter Correct Address" : null,
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: TextFormField(
                        decoration: InputDecoration(
                          labelText: 'City',
                            contentPadding: EdgeInsets.all(10),
                            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                        ),
                        onSaved: (input)=>city=input,
                        validator: (input) => input.length == 0 ? "Please Enter City Name" : null,
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: TextFormField(
                        decoration: InputDecoration(
                          labelText: 'State/Province',
                            contentPadding: EdgeInsets.all(10),
                            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                        ),
                        onSaved: (input)=>state=input,
                        validator: (input) => input.length == 0 ? "Please Enter State/Province" : null,
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(8.0),
                      child: TextFormField(
                        decoration: InputDecoration(
                          labelText: 'Country',
                            contentPadding: EdgeInsets.all(10),
                            border: OutlineInputBorder(borderRadius: BorderRadius.circular(20)),
                        ),
                        onSaved: (input)=>country=input,
                        validator: (input) => input.length == 0 ? "Please Enter Your Country Name" : null,
                      ),
                    ),


                  ],
                ),
              ),
            ),
            CheckboxListTile(
              title: Text('I agree to all terms and conditions'),
              controlAffinity: ListTileControlAffinity.leading,
              value: checkstate,
              onChanged: (bool value) {setState(() {
                checkstate=value;
                print(checkstate);
              });},
              activeColor: Colors.blue,
              checkColor: Colors.black,

            ),
            Padding(
              padding: const EdgeInsets.all(8.0),
              child: Center(
                child: FloatingActionButton(
                  onPressed: (){
                    validateform();
                  },
                  child: Text('Submit'),
                  splashColor: Colors.white60,
                ),
              ),
            ),
          ],
        ),
      ),

    );
  }
}
class recipienthomepage extends StatefulWidget {
  @override
  _recipienthomepageState createState() => _recipienthomepageState();
}

class _recipienthomepageState extends State<recipienthomepage> {
  final tabs=[
    Center(child: Text('Home')),
    Center(child: Text('Status'),),
    Center(child: Text('Profile')),
  ];
  int  indexvalue =0;
  changeindex(int index)
  {
    setState(() {
      indexvalue=index;
    });
  }
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      //tabs[indexvalue];
//        bottomNavigationBar: BottomNavigationBar(
//          currentIndex: indexvalue,
//          onTap: changeindex,
//          backgroundColor: Colors.deepOrange,
//          items: [
//            BottomNavigationBarItem(
//              icon: Icon(Icons.home),
//              title: Text('Home'),
//              backgroundColor: Colors.lightGreenAccent,
//            ),
//            BottomNavigationBarItem(
//              icon: Icon(Icons.blur_circular),
//              title: Text('Status'),
//              backgroundColor: Colors.teal,
//            ),
//            BottomNavigationBarItem(
//              icon: Icon(Icons.person),
//              title: Text('Profile'),
//              backgroundColor: Colors.blueAccent,
//            ),
//          ]
//        ),
      body:tabs[indexvalue],
      bottomNavigationBar: BottomNavigationBar(
        currentIndex: indexvalue,
        onTap: changeindex,
        backgroundColor: Colors.deepOrange,
        items: [
          BottomNavigationBarItem(
            icon: Icon(Icons.home),
            title: Text('Home'),
            backgroundColor: Colors.lightGreenAccent,
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.blur_circular),
            title: Text('Status'),
            backgroundColor: Colors.teal,
          ),
          BottomNavigationBarItem(
            icon: Icon(Icons.person),
            title: Text('Profile'),
            backgroundColor: Colors.blueAccent,
          ),
        ]
    ),
    );
  }
}


